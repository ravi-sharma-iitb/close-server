{
  "_from": "plivo",
  "_id": "plivo@4.1.2",
  "_inBundle": false,
  "_integrity": "sha512-tX/OMDuhaPNSWu3tcXIxN/EumesLeZIjSiHo/mmnQZ0ZCELl2oF7Lo1Uyplki8VJ1VH5PgeqLthaQs5Buntsqg==",
  "_location": "/plivo",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "plivo",
    "fetchSpec": "latest",
    "name": "plivo",
    "raw": "plivo",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/plivo/-/plivo-4.1.2.tgz",
  "_shasum": "c021933a3d6e0820b2cfdf3bd56f645ccc2826d4",
  "_spec": "plivo",
  "_where": "/home/ravi/Social_2",
  "author": {
    "name": "Plivo SDKs Team"
  },
  "bugs": {
    "url": "https://github.com/plivo/plivo-node/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "base-64": "^0.1.0",
    "build-url": "^1.0.10",
    "lodash": "^4.17.4",
    "querystring": "^0.2.0",
    "request": "^2.81.0",
    "uri-parser": "^1.0.0",
    "utf8": "^2.1.2",
    "xmlbuilder": "^9.0.1"
  },
  "deprecated": false,
  "description": "A Node.js SDK to make voice calls & send SMS using Plivo and to generate Plivo XML",
  "devDependencies": {
    "babel-core": "^6.11.4",
    "babel-eslint": "^6.1.2",
    "babel-preset-es2015": "6.9.0",
    "babel-preset-flow": "^6.23.0",
    "babel-register": "^6.9.0",
    "del": "^2.0.2",
    "eslint": "^3.19.0",
    "eslint-config-xo-space": "^0.15.0",
    "eslint-plugin-babel": "^3.3.0",
    "eslint-plugin-flowtype": "^2.33.0",
    "flow-bin": "^0.47.0",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-babel-istanbul": "^1.6.0",
    "gulp-coveralls": "^0.1.0",
    "gulp-eslint": "^3.0.1",
    "gulp-exclude-gitignore": "^1.0.0",
    "gulp-istanbul": "^1.0.0",
    "gulp-line-ending-corrector": "^1.0.1",
    "gulp-mocha": "^3.0.1",
    "gulp-plumber": "^1.0.0",
    "isparta": "^4.0.0",
    "sinon": "^2.1.0"
  },
  "eslintConfig": {
    "env": {
      "mocha": true
    },
    "extends": "xo-space"
  },
  "files": [
    "dist"
  ],
  "homepage": "https://github.com/plivo/plivo-node",
  "keywords": [
    "api",
    "plivo",
    "plivo xml",
    "rest",
    "telephony"
  ],
  "license": "MIT",
  "main": "dist/rest/client.js",
  "name": "plivo",
  "optionalDependencies": {},
  "readme": "# plivo-node\nThe Node.js SDK makes it simpler to integrate communications into your Node.js applications using the Plivo REST API. Using the SDK, you will be able to make voice calls, send SMS and generate Plivo XML to control your call flows.\n\n## Installation\nInstall the SDK using [npm](https://www.npmjs.com/package/plivo)\n\n    $ npm install plivo\n\nIf you have the `0.4.1` version (a.k.a legacy) already installed, you may have to first uninstall it before installing the new version.\n\nFor features in beta, use the beta branch:\n\n    $ npm install plivo@beta\n    \n## Getting started\n\n### Authentication\nTo make the API requests, you need to create a `Client` and provide it with authentication credentials (which can be found at [https://manage.plivo.com/dashboard/](https://manage.plivo.com/dashboard/)).\n\nWe recommend that you store your credentials in the `PLIVO_AUTH_ID` and the `PLIVO_AUTH_TOKEN` environment variables, so as to avoid the possibility of accidentally committing them to source control. If you do this, you can initialise the client with no arguments and it will automatically fetch them from the environment variables:\n\n```javascript\nlet plivo = require('plivo');\nlet client = new plivo.Client();\n```\nAlternatively, you can specifiy the authentication credentials while initializing the `Client`.\n\n```javascript\nlet plivo = require('plivo');\nlet client = new plivo.Client('your_auth_id', 'your_auth_token');\n```\n\n### The basics\nThe SDK uses consistent interfaces to create, retrieve, update, delete and list resources. The pattern followed is as follows:\n\n```javascript\nclient.resources.create(name,params); // Create\nclient.resources.get(id); // Get\nclient.resources.update(params); // Update\nclient.resources.delete(id); // Delete\nclient.resources.list({limit:5,offset:0}); // List all resources, max 20 at a time\n```\n\nAlso, using `client.resources.list()` would list the first 20 resources by default (which is the first page, with `limit` as 20, and `offset` as 0). To get more, you will have to use `limit` and `offset` to get the second page of resources.\n\n## Examples\n\n### Send a message\n\n```javascript\nlet plivo = require('plivo');\nlet client = new plivo.Client();\n\nclient.messages.create(\n  'your_source_number',\n  'your_destination_number',\n  'Hello, world!'\n).then(function(message_created) {\n  console.log(message_created)\n});\n\n```\n\n### Make a call\n\n```javascript\nlet plivo = require('plivo');\nlet client = new plivo.Client();\n\nclient.calls.create(\n  'your_source_number',\n  'your_destination_number',\n  'http://answer.url'\n).then(function(call_created) {\n  console.log(call_created)\n});\n\n```\n\n### Generate Plivo XML\n\n```javascript\nlet plivo = require('plivo');\nlet response = new plivo.Response();\nlet speak_body = \"Hello, world!\";\n\nresponse.addSpeak(speak_body);\nconsole.log(response.toXML());\n```\n\nThis generates the following XML:\n\n```xml\n<Response>\n  <Speak>Hello, world!</Speak>\n</Response>\n```\n\n### Run a PHLO\n\n```javascript\nvar plivo = require('../dist/rest/client.js');\nvar PhloClient = plivo.PhloClient;\n\nvar authId = 'auth-id';\nvar authToken = 'auth-token';\nvar phloId = 'PHLO_ID';\nvar phloClient = phlo = null;\n\n// Run phlo\nphloClient = new PhloClient(authId, authToken);\nphloClient.phlo(phloId).run().then(function (result) {\nconsole.log('Phlo run result', result);\n}).catch(function (err) {\nconsole.error('Phlo run failed', err);\n});\n```\n\n### More examples\nRefer to the [Plivo API Reference](https://api-reference.plivo.com/latest/node/introduction/overview) for more examples. Also refer to the [guide to setting up dev environment](https://developers.plivo.com/getting-started/setting-up-dev-environment/) on [Plivo Developers Portal](https://developers.plivo.com) to setup an Express server & use it to test out your integration in under 5 minutes.\n\n## Reporting issues\nReport any feedback or problems with this version by [opening an issue on Github](https://github.com/plivo/plivo-node/issues).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/plivo/plivo-node.git"
  },
  "scripts": {
    "prepublish": "gulp prepublish",
    "test": "gulp"
  },
  "version": "4.1.2"
}
